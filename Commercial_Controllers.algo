//Default parameters

    SET column_1 AND column_2 AND column_3 AND column_4 TO battery
    SET number_floors TO 60
    SET number_basements TO 6
    SET number_column TO 4
    SET number_elevator TO 12
    SET elevator_status TO IDLE
    SET security TO decrement OF 20 seconds
    SET elevator_direction TO NULL
    SET wanted_floor TO NULL
    SET user_emplacement TO NULL
    IF hour EQUAL 7am TO 9am THEN
        SET elevators TO ground_floor
    ELSE 
        SET elevators TO ground_floor
    ENDIF 
    IF hour EQUAL 11am TO 1pm THEN
        SET elevators TO ground_floor
    ELSE 
        SET elevators TO ground_floor
    ENDIF 
    IF hour EQUAL 4pm TO 6pm THEN
        SET elevators TO ground_floor
    ELSE 
        SET elevators TO ground_floor
    ENDIF

    
//Billboard function
    SEQUENCE Billboard USING column AND elevator AND user_input AND wanted_floor
        READ user is input RETURNING wanted_floor
        RETURN column AND elevator
    ENDSEQUENCE
//

//If the user is on floor X and want to go to floor Y
    SEQUENCE user_other_floor USING elevator AND billboard AND elevator_status AND elevator_direction AND elevator_status AND current_floor AND user_emplacement
        IF user is on floor X AND want TO go TO floor Y THEN  
            CALL elevator RETURNING elevator SORT by rank
            SET elevator_status TO movement
            SET elevator_direction TO up
            WHILE elevator_status EQUAL movement
                READ current_floor
                IF current_floor EQUAL user_emplacement
                    SET elevator_status TO STOP
                    CALL open_doors
                    CALL security_movement
                    CALL max_detection
                ELSE 
                    continue until current_floor EQUAL user_emplacement
                ENDIF
            ENDWHILE
            CALL security_movement
            CALL max_detection
            CALL security
            CALL close_doors
            SET elevator_status TO movement
            SET elevator_direction TO down
            WHILE elevator_status EQUAL movement
                READ current_floors
                IF current_floors EQUAL ground_floor THEN 
                    SET elevator_status TO STOP
                    CALL open_doors
                    CALL security
                    CALL close_doors
                ELSE 
                    CONTINUE until current_floors EQUAL ground_floor
                ENDIF
        ELSE 
            BREAK
        ENDIF
        CALL billboard
    ENDSEQUENCE
//

//Floor display function in the elevator
    SEQUENCE floor_display_elevator USING current_floors AND return_current_floor
        READ current_floors RETURNING current_floors
        RETURN current_floors
    ENDSEQUENCE
//

//Open doors function

    SEQUENCE open_doors USING ground_floor AND user_emplacement AND open_doors
        SET open_doors TO TRUE IF elevator EQUAL ground_floor OR user_emplacement
    ENDSEQUENCE

//Open doors function

//Close doors function

    SEQUENCE close_doors USING security AND close_doors
        CALL security THEN SET close_doors TO TRUE
    ENDSEQUENCE

//Close doors function


//Battery function
    SEQUENCE battery_function USING elevators AND battery
        IF elevators EQUAL function
            SET battery TO on
        ELSE 
            SET battery TO off
        ENDIF
    ENDSEQUENCE
//

//Maximum load detection

    SEQUENCE max_detection USING maximum_load AND total_weight AND red_light
        READ total_weight
        IF total_weight EQUAL 1500 KG THEN 
            SET red_light TO TRUE
            STOP picking up user
            DISPLAY "Maximum number of user achieved! No more passenger will be allowed!!"
        ELSE
            SET red_light TO FALSE
            CONTINUE picking up user
        ENDIF
    ENDSEQUENCE
    
//Maximum load detection

//Security movement function

    SEQUENCE security_movement USING security_movement AND security AND close_doors
        IF user enter in elevator THEN
            SET security_movement TO ON
            LET the doors open
        ELSE 
            SET security_movement TO OFF
            CALL security
            CALL close_doors
        ENDIF
    ENDSEQUENCE

//Security movement function

//Main program
    SEQUENCE main_program
        CALL billboard
        CALL user_other_floor
        SET elevator_status TO movement
        SET elevator_direction TO UP
        WHILE elevator EQUAL movement 
            CALL floor_display_elevator RETURNING current_floor
            READ current_floors
        ENDWHILE
        IF current_floor EQUAL floor_requested THEN
            SET elvator_status TO STOP
            CALL open_doors
            CALL security_movement
            CALL security
            CALL close_doors
        ELSE 
            continue until current_floor EQUAL floor_requested THEN 
            SET elevator_status TO STOP
            CALL open_doors
            CALL security_movement
            CALL security
            CALL close_doors
        ENDIF
        RETURN elevator TO ground_floor
    ENDSEQUENCE

//Main program