//Default parameters
    
    SEQUENCE parameters
        SET default_floor FOR elevator A TO 2
        SET default_floor FOR elevator B TO 6
        SET number_of_elevators TO 2
        SET number_of_column TO 1
        SET number_of_floors TO 10
        SET elevators_direction TO NULL
        SET maximum_load TO 1275 kg
        SET user_direction TO NULL
        SET Elevator_A_emplacement TO UNDEFINED
        SET Elevator_B_emplacement TO UNDEFINED
        SET user_emplacement TO UNDEFINED
        SET wanted_floor TO UNDEFINED
        SET open_door TO FALSE
        SET elevator_status TO IDLE
        SET closing_doors TO a delay of 20 seconds
    ENDSEQUENCE

//Default parameters

//External button function

    SEQUENCE external_button USING Elevator_A_emplacement AND Elevator_B_emplacement AND user_emplacement AND elevators_direction
        IF user_emplacement IS GREATER THAN Elevator_A_emplacement OR Elevator_B_emplacement THEN
            elevators_direction EQUAL up
        ELSE 
            elevators_direction EQUAL down
        ENDIF
        CALL open_door
        CALL close_door 
    ENDSEQUENCE

//External button function

//Internal button function

    SEQUENCE internal_button USING user_emplacement AND wanted_floor AND elevators_direction
        IF wanted_floor IS GREATER THAN user_emplacement THEN
            elevators_direction EQUAL up
        ELSE
            elevators_direction EQUAL down
        ENDIF
        CALL close_door 
    ENDSEQUENCE

//Internal button function

//Doors function

    SEQUENCE open_door USING default_floor AND user_emplacement
        SET open_door TO TRUE IF elevator EQUAL default_floor AND user_emplacement
    ENDSEQUENCE

//Doors function

//Back to origin function

    SEQUENCE back_origin USING elevator_status AND default_floor AND elevator
        IF elevator EQUAL elevator_status THEN
            CALL default_floor
        ELSE
            SET elevator_status TO In Movement
        ENDIF
    ENDSEQUENCE

//Back to origin function

//Maximum load detection

    SEQUENCE max_detection USING maximum_load
        IF maximum_load EQUAL 1275 KG THEN
            No more passenger accepted
        ELSE
            Continue answering calling button
        ENDIF
    ENDSEQUENCE
    
//Maximum load detection

//Scene 1

    SEQUENCE origin
        SET elevator_A_status TO IDLE
        SET elevator_A_emplacement TO second floor
        SET elevator_B_status TO IDLE
        SET elevator_B_emplacement TO sixth floor
        SET user_emplacement TO third floor
        SET floor_requested TO seventh floor
    ENDSEQUENCE

    SEQUENCE user_calling_button USING elevator AND elevator_A AND elevator_A_status AND elevator_A_movement
        CALL elevator RETURNING elevator_A
        RETURN elevator_A
        SET elevator_A_status TO Movement
        SET elevator_A_movement TO down
    ENDSEQUENCE

    SEQUENCE elevator_A_ready_to_pick_up_user USING elevator_A AND user_emplacement AND open_doors AND opening_doors
            READ number_floor
                IF number_floor EQUAL user_emplacement THEN
                    SET elevator_status TO IDLE
                ELSE 
                    SET elevator_status TO movement
                ENDIF
            CALL open_doors RETURNING opening_doors
            RETURN opening_doors
    ENDSEQUENCE

    SEQUENCE user_into_elevator USING total_weight AND red_light AND picking_up_user AND close_door
            READ total_weight
            IF total_weight <= 1275 KG THEN 
                SET red_light TO FALSE
                CONTINUE picking_up_user
            ELSE
                SET red_light TO TRUE
                STOP picking_up_user
            ENDIF
            READ users is input
            CALL security RETURNING 20 seconds
            RETURN close_door      
    ENDSEQUENCE

    SEQUENCE elevator_in_action USING elevator_A_movement AND number_floor
        SET elevator_A_movement TO up 
        WHILE elevator in movement 
            READ number_floor
        ENDWHILE
    ENDSEQUENCE

    SEQUENCE elevator_arrived_to_destination USING elevator_A_movement AND open_doors 
        READ number_floor
        IF number_floor EQUAL floor_requested THEN 
            SET elevator_A_status TO IDLE
            SET open_doors TO TRUE
            CALL security RETURNING 20 seconds
            RETURN close_door 
        ELSE 
            SET elevator_A_status TO movement
        ENDIF
    ENDSEQUENCE

    CALL origin


//SCENE 1



    






            








        



    




