//Scene 1

    SEQUENCE origin
        SET elevator_A_status TO IDLE
        SET elevator_A_emplacement TO second floor
        SET elevator_B_status TO IDLE
        SET elevator_B_emplacement TO sixth floor
        IF hour IS between 7am AND 9am THEN
            SET default_floor FOR elevator_A TO second floor
            SET default_floor FOR elevator_B TO sixth floor
        ELSE 
            CALL elevator_A_emplacement AND elevator_B_emplacement
        ENDIF
        IF hour IS between 4pm and 6pm THEN 
            SET default_floor FOR elevator_A TO first floor
            SET default_floor FOR elevator_B TO first floor
        ELSE 
            CALL elevator_A_emplacement AND elevator_B_emplacement
        ENDIF
    ENDSEQUENCE

    SEQUENCE user_calling_button USING elevator AND elevator_A AND elevator_A_status AND user_emplacement AND open_doors
        SET user_emplacement TO third floor
        CALL elevator RETURNING elevator_A
        RETURN elevator_A
        SET elevator_A_status TO Movement
        WHILE elevator in movement 
            READ number_floor
        ENDWHILE
        IF number_floor EQUAL user_emplacement THEN
            SET elevator_status TO IDLE
        ELSE 
            SET elevator_status TO movement
        ENDIF
        CALL open_doors
    ENDSEQUENCE

    SEQUENCE user_into_elevator USING total_weight AND red_light AND picking_up_user AND close_door AND security AND wich_floor AND elevator_status AND number_floor
            READ total_weight
            IF total_weight <= 1275 KG THEN 
                SET red_light TO FALSE
                CONTINUE picking_up_user
            ELSE
                SET red_light TO TRUE
                STOP picking_up_user
                DISPLAY "Maximum number of user achieved! No more passenger will be allowed!!"
            ENDIF
            READ users is input TO floor_requested
            CALL security RETURNING 20 seconds
            RETURN close_door 
            SET elevator_status TO movement
            WHILE elevator in movement
                READ number_floor
            ENDWHILE
            IF number_floor EQUAL floor_requested THEN
                SET elvator_status TO IDLE
                SET open_door TO TRUE
                CALL security RETURNING 20 seconds
                RETURN close_doors
            ELSE 
                SET elevator_status TO movement
            ENDIF 
            READ user input
            IF user input EQUAL FALSE THEN
                CALL origin
            ELSE 
                CALL user_calling_button AND user_into_elevator
            ENDIF
    ENDSEQUENCE

//SCENE 1



//Default parameters
    
    SEQUENCE parameters
        SET default_floor FOR elevator A TO UNDEFINED
        SET default_floor FOR elevator B TO UNDEFINED
        SET number_of_elevators TO 2
        SET number_of_column TO 1
        SET number_of_floors TO 10
        SET elevators_direction TO NULL
        SET maximum_load TO 1275 kg
        SET user_direction TO NULL
        SET Elevator_A_emplacement TO UNDEFINED
        SET Elevator_B_emplacement TO UNDEFINED
        SET user_emplacement TO UNDEFINED
        SET wanted_floor TO UNDEFINED
        SET open_door TO FALSE
        SET elevator_status TO IDLE
        SET closing_doors TO a delay of 20 seconds
    ENDSEQUENCE

//Default parameters

//External button function

    SEQUENCE external_button USING Elevator_A_emplacement AND Elevator_B_emplacement AND user_emplacement AND elevators_direction
        IF user_emplacement IS GREATER THAN Elevator_A_emplacement OR Elevator_B_emplacement THEN
            elevators_direction EQUAL up
        ELSE 
            elevators_direction EQUAL down
        ENDIF
        CALL open_door
        CALL close_door 
    ENDSEQUENCE

//External button function

//Internal button function

    SEQUENCE internal_button USING user_emplacement AND wanted_floor AND elevators_direction
        IF wanted_floor IS GREATER THAN user_emplacement THEN
            elevators_direction EQUAL up
        ELSE
            elevators_direction EQUAL down
        ENDIF
        CALL close_door 
    ENDSEQUENCE

//Internal button function

//Doors function

    SEQUENCE open_door USING default_floor AND user_emplacement
        SET open_door TO TRUE IF elevator EQUAL default_floor AND user_emplacement
    ENDSEQUENCE

//Doors function

//Back to origin function

    SEQUENCE back_origin USING elevator_status AND default_floor AND elevator
        IF elevator EQUAL elevator_status THEN
            CALL default_floor
        ELSE
            SET elevator_status TO In Movement
        ENDIF
    ENDSEQUENCE

//Back to origin function

//Maximum load detection

    SEQUENCE max_detection USING maximum_load
        IF maximum_load >= 1275 KG THEN
            No more passenger accepted
            DISPLAY "Maximum load exceed"
        ELSE
            Continue answering calling button
        ENDIF
    ENDSEQUENCE
    
//Maximum load detection

//Traffic hour

    SEQUENCE traffic_set USING elevator_A AND elevator_B AND default_floor
        IF hour IS between 7am AND 9am THEN
            SET default_floor FOR elevator_A TO second floor
            SET default_floor FOR elevator_B TO sixth floor
        ELSE 
            CALL default_floor
        ENDIF
        IF hour IS between 4pm and 6pm THEN 
            SET default_floor FOR elevator_A TO first floor
            SET default_floor FOR elevator_B TO first floor
        ELSE 
            CALL default_floor
        ENDIF
    ENDSEQUENCE

//Traffic hour

